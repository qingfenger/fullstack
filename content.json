{"meta":{"title":"myblog","subtitle":null,"description":null,"author":"Estelle","url":"https://qingfenger.github.io/fullstack.github.io"},"pages":[],"posts":[{"title":"git","slug":"git","date":"2017-09-03T12:33:39.000Z","updated":"2017-09-04T08:22:24.112Z","comments":true,"path":"2017/09/03/git/","link":"","permalink":"https://qingfenger.github.io/fullstack.github.io/2017/09/03/git/","excerpt":"当前任务，学习中… 公司小范围用法： 服务器上做的：12341.在服务器上建立一个用户，这里命名为git。 ubuntu下: useradd git —— passwd git 1 （改密码为1）2.找个目录，建立空仓库 git --bare init 。 ubuntu下： cd /opt —— mkdir git —— git --bare init3.建立文件夹project.git (名字随便取，这里取project，以后别人git clone时就会生成project文件夹)。4.再建立一个文件夹.ssh，用来存入需要访问的成员的 ssh-keygen","text":"当前任务，学习中… 公司小范围用法： 服务器上做的：12341.在服务器上建立一个用户，这里命名为git。 ubuntu下: useradd git —— passwd git 1 （改密码为1）2.找个目录，建立空仓库 git --bare init 。 ubuntu下： cd /opt —— mkdir git —— git --bare init3.建立文件夹project.git (名字随便取，这里取project，以后别人git clone时就会生成project文件夹)。4.再建立一个文件夹.ssh，用来存入需要访问的成员的 ssh-keygen 项目成员机上要做的：生成本机的ssh-keygen：直接运行 ssh-keygen ，回车，回车。生成的密钥会在window下: “C:\\Documents and Settings\\userName.ssh”，有两个文件，复制id_rsa.pub的内容给服务器管理员（邮件或直接QQ吧！）。轮到服务器管理员：在.ssh文件夹下建立 id_rsa.pub 文件 ， 或直接：cat ~/opt/.ssh/id_rsa.pub 加成员的id_rsa.pub内容 （反正添加到这个文件后面就可以）下面小组成员应该可以正常访问服务器了（对了，在此之前，需要安装ssh服务器 ： apt-get install ssh）项目组老大要做的： 1234561.做一个基本项目原型，供项目成员克隆下载 ， 将已有文件推送到git服务器上2.新建文件夹，git init 初始化git 。3.git add * 将所有文件加入git 监控 ，可以用git status 查看监控状态4.git commit -m \"你的提交说明\"5.git remote add origin git@yourServerIP:/opt/git/project.git (这里是将远程git服务器命名成origin，方便以后使用，名字随便改)6.推送到服务器 git push origin master 意思是 : git 推送 到 服务器目录 哪个分支—master 。 至此，完毕。 (-a -m -am/添加 提交 添加提交;git add . 第一次提交除了删除文件全部添加) 项目成员基本步骤：123451.git clone git@serverIP:/opt/git/project.git 完成仓库克隆工作2.做该做的事，3.git commit -a -m \"你的提交说明\"4.git remote add origin git@yourServerIP:/opt/git/project.git5.git push origin master 上传分支。 当然，还有更多的分支使用技巧…请参考以下书籍：Pro.Git-zh_CN还有一本：Git Community Book 中文版 下面是本人在使用git过程遇到的问题： git服务器把文件藏在哪了呢？答：在objects文件夹下。查看文件的方式：不用进入目录下，直接用git cat-file -p 短目录名（如0e）+文件名前n位即可——————————————————————————————————————在本地新建dev分支git branch devgit checkout dev然后建立联系git push -u origin dev————————————参考文章：http://www.ossxp.com/doc/git/gitolite.html 原文: http://www.cnblogs.com/trying/archive/2012/06/28/2863758.html","categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://qingfenger.github.io/fullstack.github.io/tags/git/"}]},{"title":"hexo 安装","slug":"hexo-安装","date":"2017-09-03T12:16:29.000Z","updated":"2017-09-04T08:31:41.228Z","comments":true,"path":"2017/09/03/hexo-安装/","link":"","permalink":"https://qingfenger.github.io/fullstack.github.io/2017/09/03/hexo-安装/","excerpt":"1.首先安装node npm git 2.安装hexo ：npm install hexo-cli -g","text":"1.首先安装node npm git 2.安装hexo ：npm install hexo-cli -g3.安装 Hexo 完成后，执行下列命令，初始化并安装依赖，Hexo将会在指定文件夹中新建所需要的文件。 123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 4.生成静态页面 ： 1hexo generate 5.本地启动预览 ：hexo server 浏览器输入http://localhost:40006.部署到github 在github上创建名为your_user_name.github.io的仓库，例如我的github的用户名是flyxu,那么创建的仓库名称为flyxu.github.io 编辑博客所在文件夹下的_config.yml文件,翻到最下面，修改deploy如下： 1234deploy: type: git repository: git@github.com:flyxu/flyxu.github.io.git branch: master 7.然后执行下面命令安装 hexo-deployer-git(如果执行hexo d报ERROR Deployer not found: Git执行这一步) 1npm install hexo-deployer-git --save 8.最后部署到github:hexo deplo9.每次部署的步骤，可按以下三步来进行。 123hexo cleanhexo generate hexo deploy clean的作用是清理缓存，有时候作用很大，最好不要舍弃这一步，最后两步可简写为hexo d -g 10.一些常用命令：1234567hexo new \"postName\" #新建文章hexo new page \"pageName\" #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）hexo deploy #将.deploy目录部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 ###—秘钥：—– 1234567891011121314151617git生成秘钥：ssh-keygen -t rsa -c “您的邮箱”ssh-keygen -t rsagit clone https://github.com/iissnan/hexo-theme-next themes/next主题查看是否已经有了ssh密钥：cd ~/.ssh如果没有密钥则不会有此文件夹，有则备份删除2）生存密钥：$ ssh-keygen -t rsa -C “haiyan.xu.vip@gmail.com”或者ssh-keygen -t rsa -C wangqin798@126.com -f ~/.ssh/test指定文件名为test(-t指定密钥的类型，默认就是rsa，所以不加-t rsa也行，如果你想生成dsa密钥，就需要加参数-t dsa。)按3个回车，密码为空。Your identification has been saved in /home/tekkub/.ssh/id_rsa.Your public key has been saved in /home/tekkub/.ssh/id_rsa.pub.The key fingerprint is:最后得到了两个文件：id_rsa和id_rsa.pub3）添加密钥到ssh：ssh-add 文件名需要之前输入密码。 12345 在github上添加ssh密钥，这要添加的是“id_rsa.pub”里面的公钥。测试在控制台上测试一下，输入：ssh -T git@github.com只要看到最后一行Hi chenlianjiang! You've successfully authenticated, but GitHub does not provide shell access，说明验证成功了 git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia主题：https://github.com/litten/hexo-theme-yilia原文: http://blog.csdn.net/yaphat/article/details/53187675 Estelle 独立 友好 温馨","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://qingfenger.github.io/fullstack.github.io/tags/hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-09-03T11:43:17.395Z","updated":"2017-09-04T08:23:24.009Z","comments":true,"path":"2017/09/03/hello-world/","link":"","permalink":"https://qingfenger.github.io/fullstack.github.io/2017/09/03/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}